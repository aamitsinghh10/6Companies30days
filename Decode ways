 int numDecodings(string s) 
    {
        int n=s.length();
        if(s[0] == '0') return 0;
        if(n==1) return 1;
        vector<int> dp(n+1,0);
        dp[0] = 1;
        dp[1] = 1;
        
        for(int i=2;i<=n;i++) {
            int onedigit = s[i-1] -'0';
            int twodigit = (s[i-2]-'0')*10 + (s[i-1]-'0');
            if(onedigit>=1) 
                dp[i] += dp[i-1];
            if(twodigit>=10 && twodigit <=26)
                dp[i] += dp[i-2];
        }
        return dp[n];
        /*int n=s.size();
        
        if(s[0]=='0')
            return 0;
        int dp[n];
        dp[0]=1;
        
        for(int i=1;i<n;i++)
        {
            if(s[i-1]=='0' && s[i]=='0')
                dp[i]=0;
            
            else if(s[i-1]=='0' && s[i]!='0')
            {
                dp[i]=dp[i-1];
            }
            else if(s[i-1]!='0' && s[i]=='0')
            {
                if(s[i-1]=='1' || s[i-1]=='2')
                {
                    dp[i]=(i>=2?dp[i-2]:1);
                }
                else
                    dp[i]=0;
            }
            else
            {
                if(s[i-1]<='2' && s[i]<'7')
                {
                    dp[i]=dp[i-1]+(i>=2?dp[i-2]:1);
                }
                else
                {
                    dp[i]=dp[i-1];
                }
            }
        }
        return dp[n-1];*/
    }
};
